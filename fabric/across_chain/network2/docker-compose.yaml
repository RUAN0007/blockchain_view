#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  basic:

services:
  orderer.example.com:
    container_name: orderer.example2.com
    image: hyperledger/fabric-orderer:1.4.2
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 5050:7050
    volumes:
        - ./channel_artifacts:/etc/hyperledger/configtx
        - ./crypto_config/ordererOrganizations/example2.com/orderers/orderer.example2.com/:/etc/hyperledger/msp/orderer
    networks:
      - basic

  peer0.org3.example.com:
    container_name: peer0.org3.example.com
    image: hyperledger/fabric-peer:1.4.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org3.example.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org3.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 5051:7051
      - 5053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto_config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto_config/peerOrganizations/org3.example.com/users:/etc/hyperledger/msp/users
        - ./channel_artifacts:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
    networks:
      - basic

  peer0.org4.example.com:
    container_name: peer0.org4.example.com
    image: hyperledger/fabric-peer:1.4.2
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org4.example.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.org4.example.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 6051:7051
      - 6053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto_config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp:/etc/hyperledger/msp/peer
        - ./crypto_config/peerOrganizations/org4.example.com/users:/etc/hyperledger/msp/users
        - ./channel_artifacts:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
    networks:
      - basic